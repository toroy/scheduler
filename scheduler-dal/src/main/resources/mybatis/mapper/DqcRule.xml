<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.clubfactory.platform.scheduler.dal.dao.DqcRuleMapper" >
  <resultMap id="BaseResultMap" type="com.clubfactory.platform.scheduler.dal.po.DqcRule" >
    <id column="id" property="id" />
    <result column="is_deleted" property="isDeleted" />
    <result column="create_time" property="createTime" />
    <result column="update_time" property="updateTime" />
    <result column="create_user" property="createUser" />
    <result column="update_user" property="updateUser" />
    <result column="check_type" property="checkType" />
    <result column="compare" property="compare" />
    <result column="upper_threshold" property="upperThreshold" />
    <result column="is_block" property="isBlock" />
    <result column="db_name" property="dbName" />
    <result column="description" property="description" />
    <result column="expect_value" property="expectValue" />
    <result column="type" property="type" />
    <result column="sample" property="sample" />
    <result column="user_id" property="userId" />
    <result column="table_name" property="tableName" />
    <result column="filter" property="filter" />
    <result column="user_sql" property="userSql" />
    <result column="job_id" property="jobId" />
    <result column="rel_job_id" property="relJobId" />
    <result column="field" property="field" />
    <result column="check_mode" property="checkMode" />
    <result column="name" property="name" />
    <result column="dqc_partition_id" property="dqcPartitionId" />
    <result column="lower_threshold" property="lowerThreshold" />
      <result column="connector_type" property="connectorType" />

  </resultMap>


  <sql id="Select_Column" >
   id
   ,is_deleted
   ,create_user
   ,update_user
   ,create_time
   ,update_time
	,check_type
	,compare
	,upper_threshold
	,is_block
	,db_name
	,description
	,expect_value
	,type
	,sample
	,user_id
	,table_name
	,filter
    ,user_sql
	,job_id
	,rel_job_id
	,field
	,check_mode
	,name
	,dqc_partition_id
	,lower_threshold
	,connector_type
  </sql>


  <sql id="Insert_Column">
     create_time
     ,update_time
     , is_deleted
     ,create_user
     ,update_user
      ,check_type
      ,compare
      ,upper_threshold
      ,is_block
      ,db_name
      ,description
      ,expect_value
      ,type
      ,sample
      ,user_id
      ,table_name
      ,filter
      ,user_sql
      ,job_id
      ,rel_job_id
      ,field
      ,check_mode
      ,name
      ,dqc_partition_id
      ,lower_threshold
      ,connector_type
  </sql>

<sql id="Insert_Value">
  #{po.createTime}
  ,#{po.updateTime}
  ,#{po.isDeleted}
  ,#{po.createUser}
  ,#{po.updateUser}
    ,#{po.checkType}
    ,#{po.compare}
    ,#{po.upperThreshold}
    ,#{po.isBlock}
    ,#{po.dbName}
    ,#{po.description}
    ,#{po.expectValue}
    ,#{po.type}
    ,#{po.sample}
    ,#{po.userId}
    ,#{po.tableName}
    ,#{po.filter}
    ,#{po.userSql}
    ,#{po.jobId}
    ,#{po.relJobId}
    ,#{po.field}
    ,#{po.checkMode}
    ,#{po.name}
    ,#{po.dqcPartitionId}
    ,#{po.lowerThreshold}
    ,#{po.connectorType}
</sql>


 <sql id="Single_Where_Sql" >
    <if test="isDeleted != null" >
    ${joinStr} is_deleted = #{isDeleted}
    </if>
     <if test="createTime != null" >
    ${joinStr} create_time = #{createTime}
     </if>
     <if test="createUser != null" >
    ${joinStr} create_user = #{createUser}
     </if>
     <if test="checkType != null" >
        ${joinStr} check_type =#{checkType}
     </if>
     <if test="compare != null" >
        ${joinStr} compare =#{compare}
     </if>
     <if test="upperThreshold != null" >
         ${joinStr} upper_threshold =#{upperThreshold}
     </if>
     <if test="isBlock != null" >
        ${joinStr} is_block =#{isBlock}
     </if>
     <if test="dbName != null and dbName != ''" >
        ${joinStr} db_name =#{dbName}
     </if>
     <if test="description != null and description != ''" >
        ${joinStr} description =#{description}
     </if>
     <if test="expectValue != null and expectValue != ''" >
        ${joinStr} expect_value =#{expectValue}
     </if>
     <if test="type != null" >
        ${joinStr} type =#{type}
     </if>
     <if test="sample != null" >
        ${joinStr} sample =#{sample}
     </if>
     <if test="userId != null" >
         ${joinStr} user_id =#{userId}
     </if>
     <if test="tableName != null and tableName != ''" >
        ${joinStr} table_name =#{tableName}
     </if>
     <if test="filter != null and filter != ''" >
        ${joinStr} filter =#{filter}
     </if>
     <if test="userSql != null and userSql != ''" >
         ${joinStr} user_sql =#{userSql}
     </if>
     <if test="jobId != null" >
         ${joinStr} job_id =#{jobId}
     </if>
     <if test="relJobId != null" >
         ${joinStr} rel_job_id =#{relJobId}
     </if>
     <if test="field != null and field != ''" >
        ${joinStr} field =#{field}
     </if>
     <if test="checkMode != null" >
        ${joinStr} check_mode =#{checkMode}
     </if>
     <if test="name != null and name != ''" >
        ${joinStr} name =#{name}
     </if>
     <if test="dqcPartitionId != null" >
         ${joinStr} dqc_partition_id =#{dqcPartitionId}
     </if>
     <if test="lowerThreshold != null" >
         ${joinStr} lower_threshold =#{lowerThreshold}
     </if>
     <if test="connectorType != null" >
         ${joinStr} connector_type =#{connectorType}
     </if>
</sql>

<sql id="Table_Name" >
   sc_dqc_rule
</sql>


      <sql id="Where_Sql" >
      <if test="endDate != null and endDate != ''">
      		<![CDATA[ and create_time < #{endDate} ]]>
      	</if>
      	<if test="startDate != null and startDate != ''">
      		<![CDATA[ and create_time >= #{startDate} ]]>
      	</if>
      	<if test="id != null" >
      		and id = #{id}
      	</if>
        <if test="ids != null and ids.size() > 0" >
          and
          <choose>
            <when test="queryListFieldName != null  and queryListFieldName !=''">${queryListFieldName}</when>
            <otherwise>id</otherwise>
          </choose>
          in
          <foreach collection="ids" item="item" open="(" separator="," close=")">
              #{item}
          </foreach>
        </if>
        <include refid="Single_Where_Sql"><property name="joinStr" value="and"/></include>
    </sql>


    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into
        <include refid="Table_Name"/>
        (
        <include refid="Insert_Column"/>
        )
        values (
        <include refid="Insert_Value"/>
        )
    </insert>


    <insert id="saveBatch">
        insert into
        <include refid="Table_Name"/>
        (
        <include refid="Insert_Column"/>
        )
        values
        <foreach item="po" collection="list" separator=",">
        (
          <include refid="Insert_Value"/>
        )
        </foreach>
    </insert>


  <select id="get" resultMap="BaseResultMap">
    select
    <include refid="Select_Column" />
    from <include refid="Table_Name" />
    where 1 = 1
    <include refid="Where_Sql"></include>
  </select>


  <select id="list" resultMap="BaseResultMap" >
    select
    <include refid="Select_Column" />
    from <include refid="Table_Name" /> 
    where 1 = 1
    <include refid="Where_Sql"></include>
    <if test="orderBy != null" >
    	order by ${orderBy}
    </if>
  </select>


  <select id="count" resultType="java.lang.Integer">
      select count(1) from <include refid="Table_Name" />
      where 1 = 1
      <include refid="Where_Sql"></include>
   </select>

    <select id="listTargetTaskIds" resultType="java.util.Map">
        select depends.parent_id parent_id, group_concat(depends.task_id) task_ids from
        (select job_id from sc_dqc_rule where rel_job_id is not null) rule
        join (select job_id,id from sc_task where job_type = 'DQC' and is_deleted =false and create_time >= #{startDate} ) task
        on rule.job_id = task.job_id
        join (select task_id, parent_id from sc_task_depends where create_time >= #{startDate}) depends
        on depends.task_id = task.id
        group by depends.parent_id
    </select>

    <select id="countTargetTaskIds" resultType="java.lang.Integer">
        select count(distinct depends.parent_id) from
        (select job_id from sc_dqc_rule where 1 = 1 <include refid="Where_Sql"></include> ) rule
        join (select job_id,id from sc_task where job_type = 'DQC' and is_deleted =false) task
        on rule.job_id = task.job_id
        join (select task_id, parent_id from sc_task_depends) depends
        on depends.task_id = task.id
        group by depends.parent_id
    </select>

  <delete id="remove">
      delete from <include refid="Table_Name" />
      where 1 = 1
      <include refid="Where_Sql"></include>
  </delete>


  <update id="edit">
    update <include refid="Table_Name" />
    <set >
       update_time = #{updateTime}
       <if test="updateParam != null" >
      <foreach collection="updateParam" index="k" item="v">
        <if test="null != v">
          , ${k} = #{v}
        </if>
      </foreach>
    </if>
    </set>
    <where>
    <include refid="Where_Sql"></include>
    </where>
    
  </update>

    <update id="editIfNull">
        update <include refid="Table_Name" />
        <set >
            update_time = #{updateTime}
            <if test="updateParam != null" >
                <foreach collection="updateParam" index="k" item="v">
                    , ${k} = #{v}
                </foreach>
            </if>
        </set>
        <where>
            <include refid="Where_Sql"></include>
        </where>
    </update>

  <update id="logicRemove">
      update <include refid="Table_Name" />
      <set >
         update_time = #{updateTime},is_deleted = true
      </set>
      where 1 = 1
      <include refid="Where_Sql"></include>
   </update>


</mapper>